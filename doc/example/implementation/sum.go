// Code generated by protoc-gen-goclay, but you can (must) modify it.
// source: pb/sum.proto

package sum

import (
	"context"

	"github.com/pkg/errors"
	desc "github.com/utrack/clay/doc/example/pb"
	"google.golang.org/genproto/googleapis/rpc/errdetails"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

func (i *SummatorImplementation) Sum(ctx context.Context, req *desc.SumRequest) (*desc.SumResponse, error) {
	if req.GetA() == 0 {
		return nil, errors.New("a is zero")
	}

	if req.GetB().B == 65536 {
		panic(errors.New("we've got a problem; the panic is planned to happen"))
	}

	if req.GetB().B == 65537 {
		st, err := status.New(
			codes.InvalidArgument,
			"test",
		).WithDetails(
			&errdetails.ErrorInfo{
				Reason:   "invalid argument",
				Domain:   "summator",
				Metadata: map[string]string{"foo": "bar"},
			},
		)
		if err != nil {
			return nil, status.Error(codes.Internal, "something went wrong")
		}

		return nil, st.Err()
	}

	sum := req.GetA() + req.GetB().B

	return &desc.SumResponse{
		Sum: sum,
	}, nil
}
